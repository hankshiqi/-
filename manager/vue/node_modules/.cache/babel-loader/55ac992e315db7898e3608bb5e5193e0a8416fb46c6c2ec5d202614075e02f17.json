{"ast":null,"code":"import E from \"wangeditor\";\nimport hljs from 'highlight.js';\nexport default {\n  name: \"activity\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      userName: null,\n      categoryName: null,\n      fromVisible: false,\n      form: {},\n      content: '',\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入活动名称',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      fromVisible1: false,\n      editor: null\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.setRichText();\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n      this.setRichText();\n      setTimeout(() => {\n        this.editor.txt.html(this.form.content);\n      }, 0);\n    },\n    setRichText() {\n      this.$nextTick(() => {\n        this.editor = new E(`#editor`);\n        this.editor.highlight = hljs;\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload';\n        this.editor.config.uploadFileName = 'file';\n        this.editor.config.uploadImgHeaders = {\n          token: this.user.token\n        };\n        this.editor.config.uploadImgParams = {\n          type: 'img'\n        };\n        this.editor.create(); // 创建\n      });\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.content = this.editor.txt.html();\n          this.$request({\n            url: this.form.id ? '/activity/update' : '/activity/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/activity/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/activity/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/activity/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          content: this.content\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null, this.userName = null, this.categoryName = null, this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleImgSuccess(response, file, fileList) {\n      this.form.cover = response.data;\n    },\n    preview(content) {\n      this.content = content;\n      this.fromVisible1 = true;\n    }\n  },\n  mounted() {\n    this.$request.get('/category/selectAll').then(res => {\n      this.categoryList = res.data || [];\n    });\n  }\n};","map":{"version":3,"names":["E","hljs","name","data","tableData","pageNum","pageSize","total","userName","categoryName","fromVisible","form","content","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","fromVisible1","editor","created","load","methods","handleAdd","setRichText","handleEdit","row","stringify","setTimeout","txt","html","$nextTick","highlight","config","uploadImgServer","$baseUrl","uploadFileName","uploadImgHeaders","token","uploadImgParams","type","create","save","$refs","formRef","validate","valid","$request","url","id","method","then","res","code","$message","success","error","msg","del","$confirm","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange","handleImgSuccess","file","fileList","cover","preview","mounted","categoryList"],"sources":["src/views/manager/Activity.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入名称查询\" style=\"width: 200px\" v-model=\"name\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\" v-if=\"user.role ==='ADMIN'\">新增</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\" v-if=\"user.role ==='ADMIN'\">批量删除</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"name\" label=\"活动名称\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"descr\" label=\"活动简介\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column label=\"查看内容\">\r\n          <template v-slot=\"scope\">\r\n            <el-button @click=\"preview(scope.row.content)\">查看内容</el-button>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"cover\" label=\"封面\">\r\n          <template v-slot=\"scope\">\r\n            <div style=\"display: flex; align-items: center\">\r\n              <el-image style=\"width: 40px; height: 40px;\" v-if=\"scope.row.cover\" :src=\"scope.row.cover\"\r\n                :preview-src-list=\"[scope.row.cover]\"></el-image>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"start\" label=\"开始时间\"></el-table-column>\r\n        <el-table-column prop=\"end\" label=\"结束时间\"></el-table-column>\r\n        <el-table-column prop=\"form\" label=\"活动形式\"></el-table-column>\r\n        <el-table-column prop=\"readCount\" label=\"浏览量\"></el-table-column>\r\n        <el-table-column prop=\"address\" label=\"活动地址\"></el-table-column>\r\n        <el-table-column prop=\"host\" label=\"主办方\"></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\">\r\n          <template v-slot=\"scope\">\r\n            <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\" v-if=\"user.role === 'ADMIN'\">编辑</el-button>\r\n            <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id) v-if=\"user.role === 'ADMIN'\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination background @current-change=\"handleCurrentChange\" :current-page=\"pageNum\"\r\n          :page-sizes=\"[5, 10, 20]\" :page-size=\"pageSize\" layout=\"total, prev, pager, next\" :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog name=\"活动信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"name\" label=\"活动名称\">\r\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"descr\" label=\"活动简介\">\r\n          <el-input v-model=\"form.descr\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"cover\" label=\"封面\">\r\n          <el-upload :action=\"$baseUrl + '/files/upload'\" :headers=\"{ token: user.token }\" list-type=\"picture\"\r\n            :on-success=\"handleImgSuccess\">\r\n            <el-button type=\"primary\">上传</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item prop=\"start\" label=\"开始时间\">\r\n          <el-date-picker format=\"yyyy-MM-dd\" value-format=\"yyyy-MM-dd\"\r\n                          v-model=\"form.start\" style=\"width: 100%\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item prop=\"end\" label=\"结束时间\">\r\n          <el-date-picker format=\"yyyy-MM-dd\" value-format=\"yyyy-MM-dd\"\r\n                          v-model=\"form.end\" style=\"width: 100%\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item prop=\"form\" label=\"活动形式\">\r\n          <el-select v-model=\"form.form\" placeholder=\"请选择活动形式\">\r\n            <el-option label=\"线上活动\" value=\"线上活动\"></el-option>\r\n            <el-option label=\"线下活动\" value=\"线下活动\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"address\" label=\"活动地址\">\r\n          <el-input v-model=\"form.address\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"host\" label=\"主办方\">\r\n          <el-input v-model=\"form.host\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"内容\" prop=\"content\">\r\n          <div id=\"editor\"></div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <el-dialog name=\"文章内容\" :visible.sync=\"fromVisible1\" width=\"50%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <div class=\"w-e-text\">\r\n        <div v-html=\"content\"></div>\r\n      </div>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible1 = false\">关 闭</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport E from \"wangeditor\"\r\nimport hljs from 'highlight.js'\r\nexport default {\r\n  name: \"activity\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      name: null,\r\n      userName: null,\r\n      categoryName: null,\r\n      fromVisible: false,\r\n      form: {},\r\n      content: '',\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入活动名称', trigger: 'blur' },\r\n        ]\r\n      },\r\n      ids: [],\r\n      fromVisible1: false,\r\n      editor:null\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.setRichText()\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n      this.setRichText()\r\n      setTimeout(() => {\r\n        this.editor.txt.html(this.form.content)\r\n      }, 0)\r\n    },\r\n    setRichText() {\r\n      this.$nextTick(() => {\r\n        this.editor = new E(`#editor`)\r\n        this.editor.highlight = hljs\r\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload'\r\n        this.editor.config.uploadFileName = 'file'\r\n        this.editor.config.uploadImgHeaders = {\r\n          token: this.user.token\r\n        }\r\n        this.editor.config.uploadImgParams = {\r\n          type: 'img',\r\n        }\r\n        this.editor.create()  // 创建\r\n      })\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.form.content=this.editor.txt.html()\r\n          this.$request({\r\n            url: this.form.id ? '/activity/update' : '/activity/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', { type: \"warning\" }).then(response => {\r\n        this.$request.delete('/activity/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)   //  [1,2]\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', { type: \"warning\" }).then(response => {\r\n        this.$request.delete('/activity/delete/batch', { data: this.ids }).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/activity/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          name: this.name,\r\n          content: this.content\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.name = null,\r\n        this.userName = null,\r\n        this.categoryName = null,\r\n        this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleImgSuccess(response, file, fileList) {\r\n      this.form.cover = response.data\r\n    },\r\n    preview(content) {\r\n      this.content = content\r\n      this.fromVisible1 = true\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$request.get('/category/selectAll').then(res => {\r\n      this.categoryList = res.data || []\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.w-e-text img {\r\n    width: 100% !important;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}