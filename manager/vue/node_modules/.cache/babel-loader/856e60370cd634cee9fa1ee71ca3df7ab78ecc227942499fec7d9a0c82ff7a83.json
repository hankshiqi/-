{"ast":null,"code":"export default {\n  name: 'Comment',\n  props: {\n    fid: null,\n    module: null\n  },\n  data() {\n    return {\n      commentContent: '',\n      commentList: [],\n      totalNum: 0,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  components: {},\n  computed: {},\n  mounted() {\n    this.loadComment();\n    this.getCount();\n  },\n  methods: {\n    addReply(comment) {\n      this.$request.post('/comment/add', {\n        pid: comment.id,\n        content: comment.replyContent,\n        rootId: comment.rootId,\n        module: comment.module,\n        fid: comment.fid\n      }).then(res => {\n        comment.replyContent = '';\n        this.loadComment();\n      });\n    },\n    addComment() {\n      this.$request.post('/comment/add', {\n        fid: this.fid,\n        content: this.commentContent,\n        module: '文章'\n      }).then(res => {\n        //console.log(res.data)\n        this.commentContent = '';\n        this.loadComment();\n      });\n    },\n    loadComment() {\n      this.$request.get('/comment/selectForUser', {\n        params: {\n          fid: this.fid,\n          module: '文章'\n        }\n      }).then(res => {\n        this.commentList = res.data;\n      });\n    },\n    changeReply(comment) {\n      this.$set(comment, 'atReply', !comment.atReply);\n    },\n    getCount() {\n      this.$request.get('/comment/getCount', {\n        params: {\n          fid: this.fid,\n          module: '文章'\n        }\n      }).then(res => {\n        this.totalNum = res.data;\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","fid","module","data","commentContent","commentList","totalNum","user","JSON","parse","localStorage","getItem","components","computed","mounted","loadComment","getCount","methods","addReply","comment","$request","post","pid","id","content","replyContent","rootId","then","res","addComment","get","params","changeReply","$set","atReply"],"sources":["src/views/front/Comment.vue"],"sourcesContent":["<!--  -->\r\n<template>\r\n  <div>\r\n    <div class=\"card\">\r\n        <h2>评论 {{totalNum}}</h2>\r\n        <div style=\"margin: 20px 0;\">\r\n            <el-input type=\"textarea\" placeholder=\"请输入评论内容\" v-model=\"commentContent\"\r\n                style=\"margin: 10px 0;\">\r\n            </el-input>\r\n            <el-button type=\"primary\" @click=\"addComment\" style=\"text-align: right;\">发表评论</el-button>\r\n        </div>\r\n        <div style=\"margin: 20px 0; display: flex;\" v-for=\"comment in commentList\" :key=\"comment.id\">\r\n            <img :src=\"comment.userAvatar\" alt=\"\"\r\n                style=\"width: 50px; height: 50px; border-radius: 50%; margin-right: 20px;\">\r\n            <div style=\"flex: 1;align-items: center;\">\r\n                <div style=\"margin-bottom: 10px;\">\r\n                    <div style=\"font-size: 16px; color: #888;\">{{ comment.userName }}</div>\r\n                    <div style=\"margin: 10px 0;\">{{ comment.content }}</div>\r\n                    <div style=\"font-size: 14px; color: #888;\">{{ comment.time }}\r\n                        <span style=\"cursor: pointer;\" @click=\"changeReply(comment)\" v-if=\"user.id !== comment.userId\"><i\r\n                                :style=\"{ color: comment.atReply ? '#59aeff' : '#888' }\"\r\n                                class=\"el-icon-s-comment\"></i> 评论</span>\r\n                    </div>\r\n                    <div v-if=\"comment.atReply\" style=\"margin: 10px 0;\">\r\n                        <el-input type=\"textarea\" placeholder=\"请输入回复内容\" v-model=\"comment.replyContent\"\r\n                            style=\"margin: 10px 0;\"></el-input>\r\n                        <el-button type=\"primary\" @click=\"addReply(comment)\"\r\n                            style=\"text-align: right;\">回复</el-button>\r\n                    </div>\r\n                </div>\r\n                <!--子评论-->\r\n                <div style=\"margin: 20px 0; display: flex;\" v-for=\"child in comment.children\"\r\n                    :key=\"child.id\">\r\n                    <img :src=\"child.userAvatar\" alt=\"\"\r\n                        style=\"width: 50px; height: 50px; border-radius: 50%; margin-right: 20px;\">\r\n                    <div style=\"flex: 1; \">\r\n                        <div style=\"margin-bottom: 10px;\">\r\n                            <div style=\"font-size: 16px; color: #888;\">{{ child.userName }} \r\n                                <span\r\n                                    style=\"color: #333\" v-if=\"child.replyName !== comment.userName\">回复 {{\r\n                child.replyName }}\r\n                                </span>\r\n                            </div>\r\n                            <div style=\"margin: 10px 0;\">{{ child.content }}</div>\r\n                            <div style=\"font-size: 14px; color: #888;\">{{ child.time }}\r\n                                <span style=\"cursor: pointer;\" @click=\"changeReply(child)\" v-if=\"user.id !== child.userId\">\r\n                                    <i :style=\"{ color: child.atReply ? '#59aeff' : '#888' }\"\r\n                                        class=\"el-icon-s-comment\"></i> 评论\r\n                                </span>\r\n                            </div>\r\n                            <div v-if=\"child.atReply\" style=\"margin: 10px 0;\">\r\n                                <el-input type=\"textarea\" placeholder=\"请输入回复内容\"\r\n                                    v-model=\"child.replyContent\" style=\"margin: 10px 0;\"></el-input>\r\n                                <el-button type=\"primary\" @click=\"addReply(child)\"\r\n                                    style=\"text-align: right;\">回复</el-button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!--评论结束-->\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Comment',\r\n  props: {\r\n    fid:null,\r\n    module:null\r\n  },\r\n  data () {\r\n    return {\r\n        commentContent: '',\r\n        commentList: [],\r\n        totalNum: 0,\r\n        user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n    };\r\n  },\r\n\r\n  components: {},\r\n\r\n  computed: {},\r\n\r\n  mounted(){\r\n    this.loadComment();\r\n    this.getCount();\r\n  },\r\n\r\n  methods: {\r\n        addReply(comment) {\r\n            this.$request.post('/comment/add', {\r\n                pid: comment.id,\r\n                content: comment.replyContent,\r\n                rootId: comment.rootId,\r\n                module: comment.module,\r\n                fid: comment.fid\r\n            }).then(res => {\r\n                comment.replyContent = '';\r\n                this.loadComment();\r\n            })\r\n        },\r\n        addComment() {\r\n            this.$request.post('/comment/add', {\r\n                fid: this.fid,\r\n                content: this.commentContent,\r\n                module: '文章'\r\n            }).then(res => {\r\n                //console.log(res.data)\r\n                this.commentContent = '';\r\n                this.loadComment();\r\n            })\r\n        },\r\n        loadComment() {\r\n            this.$request.get('/comment/selectForUser', {\r\n                params: {\r\n                    fid: this.fid,\r\n                    module: '文章'\r\n                }\r\n            }).then(res => {\r\n                this.commentList = res.data;\r\n            })\r\n        },\r\n        changeReply(comment) {\r\n            this.$set(comment, 'atReply', !comment.atReply)\r\n        },\r\n        getCount(){\r\n            this.$request.get('/comment/getCount', {\r\n                params: {\r\n                    fid: this.fid,\r\n                    module: '文章'\r\n                }}).then(res => {\r\n                this.totalNum = res.data;\r\n            })\r\n        }\r\n  }\r\n}\r\n\r\n</script>\r\n<style scoped>\r\n</style>"],"mappings":"AAoEA;EACAA,IAAA;EACAC,KAAA;IACAC,GAAA;IACAC,MAAA;EACA;EACAC,KAAA;IACA;MACAC,cAAA;MACAC,WAAA;MACAC,QAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EAEAC,UAAA;EAEAC,QAAA;EAEAC,QAAA;IACA,KAAAC,WAAA;IACA,KAAAC,QAAA;EACA;EAEAC,OAAA;IACAC,SAAAC,OAAA;MACA,KAAAC,QAAA,CAAAC,IAAA;QACAC,GAAA,EAAAH,OAAA,CAAAI,EAAA;QACAC,OAAA,EAAAL,OAAA,CAAAM,YAAA;QACAC,MAAA,EAAAP,OAAA,CAAAO,MAAA;QACAxB,MAAA,EAAAiB,OAAA,CAAAjB,MAAA;QACAD,GAAA,EAAAkB,OAAA,CAAAlB;MACA,GAAA0B,IAAA,CAAAC,GAAA;QACAT,OAAA,CAAAM,YAAA;QACA,KAAAV,WAAA;MACA;IACA;IACAc,WAAA;MACA,KAAAT,QAAA,CAAAC,IAAA;QACApB,GAAA,OAAAA,GAAA;QACAuB,OAAA,OAAApB,cAAA;QACAF,MAAA;MACA,GAAAyB,IAAA,CAAAC,GAAA;QACA;QACA,KAAAxB,cAAA;QACA,KAAAW,WAAA;MACA;IACA;IACAA,YAAA;MACA,KAAAK,QAAA,CAAAU,GAAA;QACAC,MAAA;UACA9B,GAAA,OAAAA,GAAA;UACAC,MAAA;QACA;MACA,GAAAyB,IAAA,CAAAC,GAAA;QACA,KAAAvB,WAAA,GAAAuB,GAAA,CAAAzB,IAAA;MACA;IACA;IACA6B,YAAAb,OAAA;MACA,KAAAc,IAAA,CAAAd,OAAA,cAAAA,OAAA,CAAAe,OAAA;IACA;IACAlB,SAAA;MACA,KAAAI,QAAA,CAAAU,GAAA;QACAC,MAAA;UACA9B,GAAA,OAAAA,GAAA;UACAC,MAAA;QACA;MAAA,GAAAyB,IAAA,CAAAC,GAAA;QACA,KAAAtB,QAAA,GAAAsB,GAAA,CAAAzB,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}