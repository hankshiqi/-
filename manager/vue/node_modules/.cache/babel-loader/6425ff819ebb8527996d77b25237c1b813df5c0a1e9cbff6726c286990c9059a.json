{"ast":null,"code":"import E from \"wangeditor\";\nimport hljs from 'highlight.js';\nexport default {\n  name: \"activitySign\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      userName: null,\n      form: {},\n      content: '',\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入活动名称',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.content = this.editor.txt.html();\n          this.$request({\n            url: this.form.id ? '/activitySign/update' : '/activitySign/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/activitySign/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/activitySign/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/activitySign/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          content: this.content\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null, this.userName = null, this.categoryName = null, this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleImgSuccess(response, file, fileList) {\n      this.form.cover = response.data;\n    },\n    preview(content) {\n      this.content = content;\n      this.fromVisible1 = true;\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"names":["E","hljs","name","data","tableData","pageNum","pageSize","total","userName","form","content","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","created","load","methods","save","$refs","formRef","validate","valid","editor","txt","html","$request","url","id","method","then","res","code","$message","success","fromVisible","error","msg","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","categoryName","handleCurrentChange","handleImgSuccess","file","fileList","cover","preview","fromVisible1","mounted"],"sources":["src/views/manager/ActivitySign.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入活动名称查询\" style=\"width: 200px\" v-model=\"name\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\">\r\n      <el-button type=\"danger\" plain @click=\"delBatch\" v-if=\"user.role ==='ADMIN'\">批量删除</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"activityName\" label=\"活动名称\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"userName\" label=\"用户名称\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"time\" label=\"时间\"></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\">\r\n          <template v-slot=\"scope\">\r\n            <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id) v-if=\"user.role === 'ADMIN'\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination background @current-change=\"handleCurrentChange\" :current-page=\"pageNum\"\r\n          :page-sizes=\"[5, 10, 20]\" :page-size=\"pageSize\" layout=\"total, prev, pager, next\" :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport E from \"wangeditor\"\r\nimport hljs from 'highlight.js'\r\nexport default {\r\n  name: \"activitySign\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      name: null,\r\n      userName: null,\r\n      form: {},\r\n      content: '',\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入活动名称', trigger: 'blur' },\r\n        ]\r\n      },\r\n      ids: [],\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.form.content=this.editor.txt.html()\r\n          this.$request({\r\n            url: this.form.id ? '/activitySign/update' : '/activitySign/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', { type: \"warning\" }).then(response => {\r\n        this.$request.delete('/activitySign/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)   //  [1,2]\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', { type: \"warning\" }).then(response => {\r\n        this.$request.delete('/activitySign/delete/batch', { data: this.ids }).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/activitySign/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          name: this.name,\r\n          content: this.content\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.name = null,\r\n        this.userName = null,\r\n        this.categoryName = null,\r\n        this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleImgSuccess(response, file, fileList) {\r\n      this.form.cover = response.data\r\n    },\r\n    preview(content) {\r\n      this.content = content\r\n      this.fromVisible1 = true\r\n    },\r\n  },\r\n  mounted() {\r\n    \r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.w-e-text img {\r\n    width: 100% !important;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}